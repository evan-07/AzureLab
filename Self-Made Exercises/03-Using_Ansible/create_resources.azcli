###Create Resource Group
rg=RG1
location=eastus2

az group create --name $rg --location $location

###Create VNET
vnet=vnet1
vnetip=10.0.0.0/16

az network vnet create \
--resource-group $rg \
--location $location \
--address-prefixes $vnetip \
--name $vnet

###Create Subnets
subnet=subnet1
subnetip=10.0.1.0/24

az network vnet subnet create --address-prefixes $subnetip --name $subnet --resource-group $rg --vnet-name $vnet 

##Create NSG
vnetnsg=vnetnsg

az network nsg create --name $vnetnsg --resource-group $rg --location $location

#Create NSG rule to allow SSH connection
az network nsg rule create --name AllowSSHInbound \
                           --nsg-name $vnetnsg \
                           --priority 1000 \
                           --resource-group $rg \
                           --access Allow \
                           --destination-port-ranges 22\
                           --description "Allow SSH Inbound Connections" \
                           --direction Inbound \
                           --protocol TCP

az network nsg rule create --name AllowICMPInbound \
                           --nsg-name $vnetnsg \
                           --priority 2000 \
                           --resource-group $rg \
                           --access Allow \
                           --description "Allow ICMP Inbound Connections" \
                           --direction Inbound \
                           --protocol ICMP \
                           --source-address-prefixes $vnetip

###Define variables to be used by the virtual machines
image=UbuntuLTS
size=Standard_B1ls
vm0=vm0
vm1=vm-ws1
vm2=vm-ws2
vm3=vm-ws3
vm4=vm-db1
vm5=vm-db2

az vm create --name $vm0 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username vm0user \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

az vm create --name $vm1 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username ansible \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

az vm create --name $vm2 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username ansible \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

az vm create --name $vm3 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username ansible \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

az vm create --name $vm4 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username ansible \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

az vm create --name $vm5 \
--resource-group $rg \
--location $location \
--image $image \
--admin-username ansible \
--admin-password 1qazXSW@3edc \
--vnet-name $vnet  \
--subnet $subnet \
--public-ip-sku Standard \
--nsg $vnetnsg

#Update Private IP addresses of NICs to static
az network nic ip-config update \
    --name ${vm0}PublicIp \
    --resource-group $rg \
    --nic-name ${vm0}VMNic \
    --private-ip-address 10.0.0.4

az network nic ip-config update \
    --name ${vm1}PublicIp \
    --resource-group $rg \
    --nic-name ${vm1}VMNic \
    --private-ip-address 10.0.0.5

az network nic ip-config update \
    --name ${vm2}PublicIp \
    --resource-group $rg \
    --nic-name ${vm2}VMNic \
    --private-ip-address 10.0.0.6

az network nic ip-config update \
    --name ${vm3}PublicIp \
    --resource-group $rg \
    --nic-name ${vm3}VMNic \
    --private-ip-address 10.0.0.7

az network nic ip-config update \
    --name ${vm4}PublicIp \
    --resource-group $rg \
    --nic-name ${vm4}VMNic \
    --private-ip-address 10.0.0.8

az network nic ip-config update \
    --name ${vm5}PublicIp \
    --resource-group $rg \
    --nic-name ${vm5}VMNic \
    --private-ip-address 10.0.0.9

#Install python
az vm run-command invoke \
   -g $rg \
   -n $vm0 \
   --command-id RunShellScript \
   --scripts "sudo apt-get update && sudo apt-get install -y libssl-dev libffi-dev python-dev python-pip"

#Install Ansible
az vm run-command invoke \
   -g $rg \
   -n $vm0 \
   --command-id RunShellScript \
   --scripts "sudo pip install ansible[azure]"

#Create Ansible folder and inventory file
az vm run-command invoke \
   -g $rg \
   -n $vm0 \
   --command-id RunShellScript \
   --scripts "mkdir ansible && cd ansible && echo 10.0.1.11 >> inventory && echo 10.0.1.12 >> inventory && echo 10.0.1.13 >> inventory && echo 10.0.1.14 >> inventory && echo 10.0.1.15 >> inventory"   


###Display Public IP of the servers
vm0publicip=$(az network public-ip show -g $rg -n ${vm0}PublicIp --query ipAddress --output tsv)

echo "Control Server" "vm0=$vm0publicip"




#Control node
ssh-keygen

#Remote
ssh vm5user@10.0.1.9
sudo adduser ansible --gecos ""
sudo usermod -aG sudo ansible
exit

#Control node
ssh-copy-id ansible@10.0.1.9


ansible-inventory -i inventory --list
ansible -i inventory all -m ping



Reference: 
https://adamtheautomator.com/ansible-hosts-file/
https://linuxhint.com/ansible-tutorial-beginners/